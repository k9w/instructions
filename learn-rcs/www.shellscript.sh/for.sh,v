head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2019.07.25.22.24.37;	author kevin;	state Exp;
branches;
next	1.7;

1.7
date	2019.07.24.23.53.23;	author kevin;	state Exp;
branches;
next	1.6;

1.6
date	2019.07.24.23.49.34;	author kevin;	state Exp;
branches;
next	1.5;

1.5
date	2019.07.24.22.51.37;	author kevin;	state Exp;
branches;
next	1.4;

1.4
date	2019.07.24.22.29.37;	author kevin;	state Exp;
branches;
next	1.3;

1.3
date	2019.07.24.22.27.58;	author kevin;	state Exp;
branches;
next	1.2;

1.2
date	2019.07.24.22.18.05;	author kevin;	state Exp;
branches;
next	1.1;

1.1
date	2019.07.24.22.04.22;	author kevin;	state Exp;
branches;
next	;


desc
@for each number, print that number
@


1.8
log
@replaced original for loop with bulk mkdir routine
@
text
@#	$OpenBSD: for.sh,v 1.7 2019/07/24 23:53:23 kevin Exp kevin $

#!/bin/sh

for runlevel in 0 1 2 3 4 5 6 S ; do
	mkdir rc${runlevel}.d
done
@


1.7
log
@added tab char whitespace on keyword substitution (first) line
@
text
@d5 2
a6 2
for i in hello 1 \* 2 goodbye ; do
	echo "Looping ... i is set to $i"
@


1.6
log
@added OpenBSD keyword substitution
@
text
@d1 1
a1 1
# $OpenBSD: for.sh,v 1.6 2019/07/24 23:49:34 kevin Exp kevin $
@


1.5
log
@reinserted the astrisk after a backslash
@
text
@d1 2
@


1.4
log
@removed * to not display files in working directory, or any directory
@
text
@d3 1
a3 1
for i in hello 1 2 goodbye ; do
@


1.3
log
@loop through numbers, files, words
@
text
@d3 1
a3 1
for i in hello 1 * 2 goodbye ; do
@


1.2
log
@converted whitespace to OpenBSD kernel normal form.
@
text
@d3 2
a4 2
for i in 1 2 3 4 5; do
	echo "Looping ... number $i"
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
for i in 1 2 3 4 5
do
  echo "Looping ... number $i"
@
